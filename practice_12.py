# 12강 _ 문자열 처리 함수

파이썬 = "Python is Amazing"
print(파이썬.lower())  #파이썬 함수의 모든 문자열이 소문자가 됨
print(파이썬.upper())  #파이썬 함수의 모든 문자열이 대문자가 됨

# str형 변수의 내용의 인덱스 i에 있는 문자가 대/소문자인지 확인하는 코드
# 변수이름[i].islower()  # 소문자인지 확인 결과는 bool 형태로 출력됨
# 변수이름[i].isupper()  # 대문자인지 확인 결과는 bool 형태로 출력됨
print(파이썬[1].islower())  # 인덱스 1 문자 소문자이므로 True
print(파이썬[0].isupper())  # 인덱스 0 문자 대문자이므로 True

# 파이썬에서 길이를 출력하는 변수는 len(변수이름)
print(len(파이썬))  # 17출력. 띄어쓰기도 1개로 쳐짐

# 변수 내의 특정 단어를 골라 내 다른 단어로 교체하는 코드
# 변수이름.replace("찾을 문자","바꿀 문자")
print(파이썬.replace("Python","Java")) # 출력 Java is Amazing
# 단 위는 단지 프린트만 했지 교체된걸 다시 파이썬에 넣지는 않았으므로
print(파이썬) # 이 줄의 출력은 Python is Amazing 이다.
# 파이썬 = 파이썬.replace("Python","Java") 이렇게 해야 내용을 바꿀 수 있다.

# 특정 문자가 어디 있는지 확인하는 코드 ,  변수이름.index("찾을 문자")
print(파이썬.index("P"))  # 출력 = 0 
인덱스값_1 = 파이썬.index("n") # 첫번째 n 의 위치인 5가 인덱스 변수에 삽입됨.
print(인덱스값_1)  # 5 출력
# 그 다음 n 을 찾으려면 아래와 같이 코드를 작성한다.
인덱스값_2 = 파이썬.index("n",인덱스값_1+1) # 이렇게 하면 5 + 1 즉 6번째 인덱스부터 다시
print(인덱스값_2) # n을 찾게 되고 15가 출력된다.
print(파이썬.index("Python is"))
# 이렇게 문장도 찾을 수 있으며 위의 경우 첫번째 글자 인덱스 위치가 출력됨. 출력 = 0
print(파이썬.index("korea"))
# 위처럼 해당 변수에 해당 문자가 없는 경우 에러가 발생하고 프로그램을 종료시킨다.

# 원하는 문자의 위치를 알려주는 다른 변수로    변수이름.find("찾는 문자)    도 있다.
print(파이썬.find("Python")) # 0 출력
# index 코드는 해당 문자가 없는 경우 에러가 발생하나 find 는 -1 을 출력하고 프로그램을 이어간다.
print(파이썬.find("korea")) # -1 출력

# 원하는 변수에서 원하는 문자의 개수를 세는 코드    변수이름.count("셀 문자")
print(파이썬.count("n")) # 2출력