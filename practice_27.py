# 출력 포멧


#----------------------------------------------------------------------------------------------------
# 정수 표현 출력 포멧
# "{0:[빈공간 채울 대상][정렬 방향][기호표시 여부][몇자리 공간 할당할 건지]}".format(출력할 대상)
# 
# 실수 표현 출력 포멧 (디폴트 6자리까지 출력)
# "{0:[.소숫점 표현 자릿수]f[기호표시 여부]}"[몇자리 공간 할당할 건지]}".format(출력할 대상)}
#----------------------------------------------------------------------------------------------------


# 빈 자리는 빈 공간으로 두고, 오른쪽 정렬을 하되, 총 10자리 공간을 확보.
print("{0: >10}".format(500))
# 빈자리는 " " 비어있는 스페이스로 두고, 오른쪽 정렬(>)을 하되, 총 10자리 공간을 확보하고 500을 출력하라.
# 출력:       500
# 위의 경우 format값이 음수면 음수가 나오기는 하는데 양수일 땐 + 가 안찍혀 나옴.


# 양수일 땐 +로 표시하고 음수일 땐 -로 표시
print("{0: >+10}".format(500))
print("{0: >+10}".format(-500))
# 위랑 같은데 목표설정공간 숫자 앞에 + 를 쓰면 양수 또는 음수를 기호를 붙여서 표시.
#      +500
#      -500


# 왼쪽 정렬하고, 빈칸을 _로 채우고 양수/음수 기호 표시
print("{0:_<+10}".format(500))
# 빈 공간을 " " 대신 "_"로 뒀음.
# +500______


# 큰 수가 들어왔을 때, 3자리마다 ","를 찍기
print("{0:,}".format(100000000000))
# 100,000,000,000


# 큰 수가 들어왔을 때, 3자리마다 ","를 찍고 양수/음수 기호 표시
print("{0:+,}".format(100000000000))
print("{0:+,}".format(-100000000000))
# +100,000,000,000
# -100,000,000,000


# 3자리마다 ","를 찍어주고, 왼쪽정렬 하고, 부호도 붙이고, 30자리 확보하고, 빈자리는 ^로 채우기.
print("{0:^<+30,}".format(-100000000000))
# -100,000,000,000^^^^^^^^^^^^^^


# 소숫점을 출력
print("{0:f}".format(5/3))
# 1.666667


# 소숫점을 특정 자릿수까지 출력
print("{0:.2f}".format(5/3))
# 1.67