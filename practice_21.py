# 반복문 (for 문  , 1줄 for문 / while 문) 및 continue / break 문


#--------------------------------------------------------------------------------
#   for문 문법
#   for문은 처음에 반복 횟수를 지정하는 반복문임
#   for 변수 in 범위 :
#   실행 명령문
#--------------------------------------------------------------------------------


for 대기번호 in [0,1,2,3,4,5]:  # 0부터 5까지 총 6번 반복되며 리스트의 값이 변수에 들어간다.
    print("현재 대기번호 : {0}".format(대기번호))

for 좋아하는나라 in ["대한민국","일본","뉴질랜드"]:
    print("저는 {0}을 좋아합니다.".format(좋아하는나라))

# 순차적으로 커지는 리스트의 경우에는 range 를 쓸 수 있다

for 대기번호 in range(5): # 0 부터 4까지 총 5번
    print("현재 대기번호 : {0}".format(대기번호))

for 대기번호 in range(2,7): # 이렇게 하면 시작지점인 2부터 7미만인 6까지 반복함. 횟수는 5번(7-2=5)
    print("현재 대기번호 : "+str(대기번호))


#--------------------------------------------------------------------------------
#   한줄 for문 문법
#   기존 리스트값에 특정한 처리를 취하고 반복하는 방법
#--------------------------------------------------------------------------------


# 학생 번호에 모두 100을 더하는 처리를 하고 해당 리스트를 출력하는 for문
학생_번호 = range(1,6) # 1부터 5까지 총 5개
처리한_학생_번호 = [i+100 for i in 학생_번호] # 학생_번호의 i들을 불러오고 이 i값에 100을 더한걸 처리한_학생_번호 리스트에 넣는다
print(처리한_학생_번호) # 출력 : [101, 102, 103, 104, 105]

# 학생들의 이름이 들어있는 리스트로부터 이름의 길이가 들어간 리스트로 처리하는 한줄for문을 작성하라.
학생_이름 = ["정재형","윈터","인디아나 존스","골든햄스터","쥐"]
학생_이름_길이 = [len(le_nth) for le_nth in 학생_이름]
print(학생_이름_길이) # 출력 : [3, 2, 7, 5, 1]

# 외국인 학생 이름 리스트의 모든 글자를 대문자로 변형하는 처리를 한 리스트를 출력하는 for문
학생_이름 = ["jaehyeong_jeong","hamster","taliyah","karina"]
대문자_학생_이름 = [i.upper() for i in 학생_이름]
print(대문자_학생_이름) # 출력 = ['JAEHYEONG_JEONG', 'HAMSTER', 'TALIYAH', 'KARINA']


#--------------------------------------------------------------------------------
#   while문 문법
#   while문은 조건이 만족할 때까지 반복하는 반복문임
#   while 조건 :
#   실행 명령문
#--------------------------------------------------------------------------------
    

고객_이름 = "정재형"
인덱스 = 5
while 인덱스 > 0 :
    print("{0}님 음식이 준비되었습니다. {1}번 남았습니다.".format(고객_이름,인덱스))
    인덱스-=1
    if 인덱스 == 0:
        print("커피는 폐기처분 되었습니다.")

'''
정재형님 음식이 준비되었습니다. 5번 남았습니다.
정재형님 음식이 준비되었습니다. 4번 남았습니다.
정재형님 음식이 준비되었습니다. 3번 남았습니다.
정재형님 음식이 준비되었습니다. 2번 남았습니다.
정재형님 음식이 준비되었습니다. 1번 남았습니다.
커피는 폐기처분 되었습니다.
'''

# While 문은 조건을 보고 반복하므로 bool값을 넣어 무한루프 시킬 수 있음.

고객 = "정재형"
부른_횟수 = 1
while True:
    print("{0}님 커피 나왔습니다. 호출{1}회.".format(고객,부른_횟수))
    부른_횟수+=1
# 무한루프문임. 터미널창을 클릭한 채 control 과 c 버튼을 함께 누르면 무한루프 빠져나올 수 있음.

customer = "정재형"
person = "unknown"
while person != customer:
    print("{0}님, 준비한 음료 나왔습니다.".format(customer))
    person = input("성함이 어떻게 되시나요? : ")
    if person != customer:
        print("이 음료의 수령자가 아닙니다.")
print("정상적으로 수령하셨습니다.")


#--------------------------------------------------------------------------------
#   continue문과 break문은 반복문 내에서 쓸 수 있다.
#   continue문은 밑의 문장을 실행하지 않고 바로 다음 반복으로 건너뛰게 하는 명령어이다. (실행문 탈출)
#   break문은 실행되는 그 즉시 가장 내부의 반복문을 즉시 탈출하는 명령어이다. (반복문 탈출)
#--------------------------------------------------------------------------------

# 예제. 10명의 학생이 있고 책을 읽게 하는데 결석한 학생 있을 때 그 학생은 건너뛰고 다음 학생이 이어서
# 읽게하는 프로그램.

결석자 = [2,5,9]
책_안가져온_학생 = [7]
for student in range(1,11): # 1부터 10까지
    if student in 결석자: # student의 값이 결석자리스트에 들어있다면 (True라면) continue 실행.
        continue # 밑의 출력문을 수행하지 않고 바로 다음 반복으로 넘어감.
    print("{0}번 학생, 책을 읽어 주세요.".format(student))

# 예제. 위 상황이랑 같은데 만약 책을 안가져온 학생이 있다면 수업 바로 종료하는 코드.
결석자 = [2,5,9]
책_안가져온_학생 = [7]
for student in range(1,11): # 1부터 10까지
    if student in 결석자: # student의 값이 결석자리스트에 들어있다면 (True라면) continue 실행.
        continue # 밑의 출력문을 수행하지 않고 바로 다음 반복으로 넘어감.
    if student in 책_안가져온_학생 :
        print("수업 여기까지. {0}번 학생은 교무실로 따라오세요.".format(책_안가져온_학생))
        break
    print("{0}번 학생, 책을 읽어 주세요.".format(student))
